{"ast":null,"code":"var _jsxFileName = \"C:\\\\EMSI\\\\node__react\\\\project nodeJS-reactJs-mySql\\\\Client\\\\my-react\\\\src\\\\pages\\\\registration.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\nimport './css/register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Registration() {\n  _s();\n\n  const navigate = useNavigate();\n  const initialValue = {\n    username: '',\n    password: ''\n  };\n  const validationSchema = yup.object().shape({\n    username: yup.string().min(5).max(25).required('field required'),\n    password: yup.string().min(5).max(90).required('field required')\n  });\n\n  const onSubmit = data => {\n    axios.post('http://localhost:3001/authentication/register', data).then(result => {\n      if (!result.data.error) {\n        navigate('/login');\n      } else {\n        alert(result.data.error);\n      }\n    });\n  };\n\n  function validateEmail(value) {\n    let error;\n\n    if (!value) {\n      error = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      alert(error = 'Invalid email address');\n    }\n\n    return error;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Register\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Page d'inscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registration\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValue,\n        onSubmit: onSubmit,\n        validationSchema: validationSchema,\n        children: _ref => {\n          let {\n            errors,\n            touched,\n            validateField,\n            validateForm\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(Form, {\n            className: \"form\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"create\",\n              name: \"username\",\n              placeholder: \"Ex.Name@xyz.com\",\n              autoComplete: \"off\",\n              validate: validateEmail()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), errors.email && touched.email && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 64\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"create\",\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"(Ex.Your Password...)\",\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"buttn\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Registration, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","yup","axios","useNavigate","Registration","navigate","initialValue","username","password","validationSchema","object","shape","string","min","max","required","onSubmit","data","post","then","result","error","alert","validateEmail","value","test","errors","touched","validateField","validateForm","email"],"sources":["C:/EMSI/node__react/project nodeJS-reactJs-mySql/Client/my-react/src/pages/registration.js"],"sourcesContent":["import React from 'react'\r\nimport {Formik,Form,Field,ErrorMessage} from 'formik';\r\nimport *as  yup from 'yup';\r\nimport axios from \"axios\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './css/register.css'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Registration() {\r\n\r\n\r\n\r\n    const navigate=useNavigate();\r\n\r\n\r\n\r\n    const initialValue={\r\n        username:'',\r\n        password:'',\r\n      \r\n    }\r\n    const validationSchema=yup.object().shape({\r\n        username: yup.string().min(5).max(25).required('field required'),\r\n        password :yup.string().min(5).max(90).required('field required'),\r\n       \r\n    })\r\n\r\n\r\n    const onSubmit=(data)=>{\r\n        axios.post('http://localhost:3001/authentication/register',data).then((result)=>{ \r\n            if(!result.data.error){\r\n                navigate('/login')\r\n            }\r\n            else{\r\n                alert(result.data.error)\r\n            }\r\n        })\r\n    }\r\n    function validateEmail(value) {\r\n        let error;\r\n        if (!value) {\r\n          error = 'Required';\r\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\r\n         alert(error = 'Invalid email address') ;\r\n        }\r\n        return error;\r\n      }\r\n\r\n  return (\r\n    <div>\r\n        <div className='Register'><h1 >Page d'inscription</h1></div>\r\n                <div className='registration'>\r\n\r\n                    <Formik initialValues={initialValue} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n                    {({ errors, touched, validateField, validateForm }) => (\r\n                        <Form className='form'>\r\n                            <label>username:</label> \r\n                            <Field id='create' name='username' placeholder='Ex.Name@xyz.com' autoComplete=\"off\" validate={validateEmail()}/> \r\n                            {errors.email  && touched.email && <div>{errors.email}</div>}\r\n\r\n                            <label>password:</label>\r\n                            <Field id='create' type='password' name='password' placeholder='(Ex.Your Password...)' autoComplete=\"off\"/>\r\n                            \r\n\r\n                            <button id='buttn' type='submit'>Submit</button>\r\n\r\n                        </Form>\r\n                    )}\r\n                    </Formik>\r\n                </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Registration"],"mappings":"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"},"metadata":{},"sourceType":"module"}